{
  "version": 3,
  "file": "app.js",
  "sources": [
    "tmp/transpiled/app/adapters/application.js",
    "tmp/transpiled/app/app.js",
    "tmp/transpiled/app/controllers/room.js",
    "tmp/transpiled/app/controllers/rooms.js",
    "tmp/transpiled/app/controllers/section.js",
    "tmp/transpiled/app/helpers/log.js",
    "tmp/transpiled/app/models/light.js",
    "tmp/transpiled/app/models/room.js",
    "tmp/transpiled/app/models/section.js",
    "tmp/transpiled/app/router.js",
    "tmp/transpiled/app/routes/index.js",
    "tmp/transpiled/app/routes/rooms.js",
    "tmp/transpiled/app/utils/register_components.js"
  ],
  "names": [],
  "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K",
  "sourcesContent": [
    "define(\"appkit/adapters/application\",\n  [],\n  function() {\n    \"use strict\";\n    var FixtureAdapter = DS.FixtureAdapter.extend();\n\n    return FixtureAdapter;\n  });",
    "define(\"appkit/app\",\n  [\"resolver\",\"appkit/utils/register_components\"],\n  function(Resolver, registerComponents) {\n    \"use strict\";\n\n    var App = Ember.Application.extend({\n      LOG_ACTIVE_GENERATION: true,\n      LOG_MODULE_RESOLVER: true,\n      LOG_TRANSITIONS: true,\n      LOG_TRANSITIONS_INTERNAL: true,\n      LOG_VIEW_LOOKUPS: true,\n      modulePrefix: 'appkit', // TODO: loaded via config\n      Resolver: Resolver\n    });\n\n    App.initializer({\n      name: 'Register Components',\n      initialize: function(container, application) {\n        registerComponents(container);\n      }\n    });\n\n\n\n    return App;\n  });",
    "define(\"appkit/controllers/room\",\n  [],\n  function() {\n    \"use strict\";\n    var RoomController = Ember.ObjectController.extend({\n      numberOfLights: function() {\n        return this.get('lights.length');\n      }.property('lights.length'),\n\n      lightsOn: function() {\n        var lights = this.get('lights');\n        return lights.filterBy('isOn', true).get('length');\n      }.property('lights.@each.isOn')\n    });\n\n\n    return RoomController;\n  });",
    "define(\"appkit/controllers/rooms\",\n  [],\n  function() {\n    \"use strict\";\n    var RoomsController = Ember.ArrayController.extend({\n      itemController: 'room',\n\n      totalLights: function() {\n        var count = 0;\n        this.forEach(function(room) {\n          count += room.get('numberOfLights');\n        })\n        return count;\n      }.property('@each.numberOfLights'),\n\n      totalLightsOn: function() {\n        var count = 0;\n        this.forEach(function(room) {\n          count += room.get('lightsOn');\n        })\n        return count;\n      }.property('@each.lightsOn'),\n\n      totalLightsOff: function() {\n        return this.get('totalLights') - this.get('totalLightsOn');\n      }.property('totalLights', 'totalLightsOn')\n    });\n\n\n    return RoomsController;\n  });",
    "define(\"appkit/controllers/section\",\n  [],\n  function() {\n    \"use strict\";\n    var SectionController = Ember.ObjectController.extend({\n      actions: {\n        turnOn: function(rooms) {\n          rooms.content.forEach(function(room) {\n            room.get('lights').setEach('isOn', true)\n          })\n        },\n        turnOff: function(rooms) {\n          rooms.content.forEach(function(room) {\n            room.get('lights').setEach('isOn', false)\n          })\n        }\n      }\n    });\n\n\n    return SectionController;\n  });",
    "define(\"appkit/helpers/log\",\n  [],\n  function() {\n    \"use strict\";\n    Ember.Handlebars.helper(\"log\", function(context) {\n      return console.log(context);\n    });\n\n  });",
    "define(\"appkit/models/light\",\n  [],\n  function() {\n    \"use strict\";\n    var Light = DS.Model.extend({\n      room: DS.belongsTo('room'),\n\n      isOn: DS.attr('boolean')\n    });\n\n    Light.FIXTURES = [\n      { id: 1, isOn: true, room: '1' },\n      { id: 2, isOn: false, room: '2' },\n      { id: 3, isOn: false, room: '3' },\n      { id: 4, isOn: false, room: '4' },\n      { id: 5, isOn: false, room: '5' },\n      { id: 6, isOn: false, room: '6' }\n    ]\n\n\n    return Light;\n  });",
    "define(\"appkit/models/room\",\n  [],\n  function() {\n    \"use strict\";\n    var Room = DS.Model.extend({\n      lights: DS.hasMany('light', { async: true }),\n      section: DS.belongsTo('section'),\n\n      name: DS.attr('string')\n    });\n\n    Room.FIXTURES = [\n      { id: 1, name: 'Main', lights: ['1'] },\n      { id: 2, name: 'Sideyard', lights: ['2'] },\n      { id: 3, name: 'Backyard', lights: ['3'] },\n      { id: 4, name: 'Guest Bath', lights: ['4'] },\n      { id: 5, name: 'Master Bath', lights: ['5'] },\n      { id: 6, name: 'Master Bedroom', lights: ['6'] }\n    ]\n\n\n    return Room;\n  });",
    "define(\"appkit/models/section\",\n  [],\n  function() {\n    \"use strict\";\n    var Section = DS.Model.extend({\n      rooms: DS.hasMany('room'),\n\n      name: DS.attr('string')\n    });\n\n    Section.FIXTURES = [\n      { id: 1, name: 'All', rooms: ['1', '2', '3', '4', '5', '6'] },\n      { id: 2, name: 'Interior', rooms: ['4', '5', '6'] },\n      { id: 3, name: 'Exterior', rooms: ['1', '2', '3'] },\n      { id: 4, name: 'Bathroom', rooms: ['4', '5'] },\n    ]\n\n    return Section;\n  });",
    "define(\"appkit/router\",\n  [],\n  function() {\n    \"use strict\";\n    var Router = Ember.Router.extend(); // ensure we don't share routes between all Router instances\n\n    Router.map(function(){\n      this.route('rooms');\n    });\n\n\n    return Router;\n  });",
    "define(\"appkit/routes/index\",\n  [],\n  function() {\n    \"use strict\";\n    var IndexRoute = Ember.Route.extend({\n      redirect: function() {\n        this.transitionTo('rooms');\n      }\n    });\n\n\n    return IndexRoute;\n  });",
    "define(\"appkit/routes/rooms\",\n  [],\n  function() {\n    \"use strict\";\n    var RoomsRoute = Ember.Route.extend({\n      model: function() {\n        return this.store.find('room');\n      },\n      setupController: function(controller, model) {\n        controller.set('model', model);\n        controller.set('sections', this.store.find('section'));\n      }\n    });\n\n\n    return RoomsRoute;\n  });",
    "define(\"appkit/utils/register_components\",\n  [],\n  function() {\n    \"use strict\";\n    /* global requirejs */\n    /* global require */\n\n    function registerComponents(container) {\n      var seen = requirejs._eak_seen;\n      var templates = seen, match;\n      if (!templates) { return; }\n\n      for (var prop in templates) {\n        if (match = prop.match(/templates\\/components\\/(.*)$/)) {\n          require(prop, null, null, true);\n          registerComponent(container, match[1]);\n        }\n      }\n    }\n\n\n    function registerComponent(container, name) {\n      Ember.assert(\"You provided a template named 'components/\" + name + \"', but custom components must include a '-'\", name.match(/-/));\n\n      var fullName         = 'component:' + name,\n          templateFullName = 'template:components/' + name;\n\n      container.injection(fullName, 'layout', templateFullName);\n\n      var Component = container.lookupFactory(fullName);\n\n      if (!Component) {\n        container.register(fullName, Ember.Component);\n        Component = container.lookupFactory(fullName);\n      }\n\n      Ember.Handlebars.helper(name, Component);\n    }\n\n\n    return registerComponents;\n  });"
  ]
}